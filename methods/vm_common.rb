
# Code for creating client VMs for testing (e.g. VirtualBox)

# Populate VMware Fusion VM vmx information

def populate_fusion_vm_vmx_info(client_name,client_mac,client_os)
  vmx_info = []
  vmx_info.push(".encoding,UTF-8")
  vmx_info.push("config.version,8")
  vmx_info.push("virtualHW.version,10")
  vmx_info.push("vcpu.hotadd,TRUE")
  vmx_info.push("scsi0.present,TRUE")
  if client_os.match(/windows7srv-64/)
    vmx_info.push("scsi0.virtualDev,lsisas1068")
  else
    vmx_info.push("scsi0.virtualDev,lsilogic")
  end
  vmx_info.push("sata0.present,TRUE")
  vmx_info.push("memsize,#{$vm_memory_size}")
  vmx_info.push("mem.hotadd,TRUE")
  vmx_info.push("scsi0:0.present,TRUE")
  vmx_info.push("scsi0:0.fileName,#{client_name}.vmdk")
  vmx_info.push("sata0:1.present,FALSE")
  vmx_info.push("floppy0.fileType,device")
  vmx_info.push("floppy0.fileName,")
  vmx_info.push("floppy0.clientDevice,FALSE")
  vmx_info.push("ethernet0.present,TRUE")
  vmx_info.push("ethernet0.connectionType,$vm_network_type")
  vmx_info.push("ethernet0.virtualDev,e1000")
  vmx_info.push("ethernet0.wakeOnPcktRcv,FALSE")
  vmx_info.push("ethernet0.addressType,static")
  vmx_info.push("ethernet0.linkStatePropagation.enable,TRUE")
  vmx_info.push("usb.present,TRUE")
  vmx_info.push("ehci.present,TRUE")
  vmx_info.push("ehci.pciSlotNumber,35")
  vmx_info.push("sound.present,TRUE")
  if client_os.match(/windows7srv-64/)
    vmx_info.push("sound.virtualDev,hdaudio")
  end
  vmx_info.push("sound.fileName,-1")
  vmx_info.push("sound.autodetect,TRUE")
  vmx_info.push("mks.enable3d,TRUE")
  vmx_info.push("pciBridge0.present,TRUE")
  vmx_info.push("pciBridge4.present,TRUE")
  vmx_info.push("pciBridge4.virtualDev,pcieRootPort")
  vmx_info.push("pciBridge4.functions,8")
  vmx_info.push("pciBridge5.present,TRUE")
  vmx_info.push("pciBridge5.virtualDev,pcieRootPort")
  vmx_info.push("pciBridge5.functions,8")
  vmx_info.push("pciBridge6.present,TRUE")
  vmx_info.push("pciBridge6.virtualDev,pcieRootPort")
  vmx_info.push("pciBridge6.functions,8")
  vmx_info.push("pciBridge7.present,TRUE")
  vmx_info.push("pciBridge7.virtualDev,pcieRootPort")
  vmx_info.push("pciBridge7.functions,8")
  vmx_info.push("vmci0.present,TRUE")
  vmx_info.push("hpet0.present,TRUE")
  vmx_info.push("usb.vbluetooth.startConnected,TRUE")
  vmx_info.push("tools.syncTime,TRUE")
  vmx_info.push("displayName,#{client_name}")
  vmx_info.push("guestOS,#{client_os}")
  vmx_info.push("nvram,#{client_name}.nvram")
  vmx_info.push("virtualHW.productCompatibility,hosted")
  vmx_info.push("tools.upgrade.policy,upgradeAtPowerCycle")
  vmx_info.push("powerType.powerOff,soft")
  vmx_info.push("powerType.powerOn,soft")
  vmx_info.push("powerType.suspend,soft")
  vmx_info.push("powerType.reset,soft")
  vmx_info.push("extendedConfigFile,#{client_name}.vmxf")
  vmx_info.push("uuid.bios,56")
  vmx_info.push("uuid.location,56")
  vmx_info.push("replay.supported,FALSE")
  vmx_info.push("replay.filename,")
  vmx_info.push("pciBridge0.pciSlotNumber,17")
  vmx_info.push("pciBridge4.pciSlotNumber,21")
  vmx_info.push("pciBridge5.pciSlotNumber,22")
  vmx_info.push("pciBridge6.pciSlotNumber,23")
  vmx_info.push("pciBridge7.pciSlotNumber,24")
  vmx_info.push("scsi0.pciSlotNumber,16")
  vmx_info.push("usb.pciSlotNumber,32")
  vmx_info.push("ethernet0.pciSlotNumber,33")
  vmx_info.push("sound.pciSlotNumber,34")
  vmx_info.push("vmci0.pciSlotNumber,36")
  vmx_info.push("sata0.pciSlotNumber,37")
  if client_os.match(/windows7srv-64/)
    vmx_info.push("scsi0.sasWWID,50 05 05 63 9c 8f c0 c0")
  end
  vmx_info.push("ethernet0.generatedAddressOffset,0")
  vmx_info.push("vmci0.id,-1176557972")
  vmx_info.push("vmotion.checkpointFBSize,134217728")
  vmx_info.push("cleanShutdown,TRUE")
  vmx_info.push("softPowerOff,FALSE")
  vmx_info.push("usb:1.speed,2")
  vmx_info.push("usb:1.present,TRUE")
  vmx_info.push("usb:1.deviceType,hub")
  vmx_info.push("usb:1.port,1")
  vmx_info.push("usb:1.parent,-1")
  vmx_info.push("checkpoint.vmState,")
  vmx_info.push("sata0:1.startConnected,FALSE")
  vmx_info.push("usb:0.present,TRUE")
  vmx_info.push("usb:0.deviceType,hid")
  vmx_info.push("usb:0.port,0")
  vmx_info.push("usb:0.parent,-1")
  vmx_info.push("ethernet0.address,#{client_mac}")
  vmx_info.push("floppy0.present,FALSE")
  vmx_info.push("serial0.present,TRUE")
  vmx_info.push("serial0.fileType,pipe")
  vmx_info.push("serial0.yieldOnMsrRead,TRUE")
  vmx_info.push("serial0.startConnected,TRUE")
  vmx_info.push("serial0.fileName,/tmp/#{client_name}")
  vmx_info.push("scsi0:0.redo,")
  return vmx_info
end




